[BCC] Angle Tween.hx________PACKSEP________//addon for Bitto zoom event
var angleTarget = 0;
var lerping = false;
function onEvent(e) if (e.event.name == "[BCC] Angle Tween") {
	var params = e.event.params;
	var timero = Conductor.stepCrochet * params[1] / 1000;
	angleTarget = params[0];
	var angleEase = CoolUtil.flxeaseFromString(params[2], params[3]);

	lerping = params[2] == "lerp";
	FlxTween.cancelTweensOf(FlxG.camera, ["angle"]);

	//trace(timero,angleTarget,angleEase);
	switch (params[2]) {
		case "none (happens instantly)": FlxG.camera.angle = angleTarget;
		case "lerp": //nothing
		default: FlxTween.angle(FlxG.camera,FlxG.camera.angle,angleTarget,timero,{ease:angleEase, onUpdate: (a) -> FlxG.camera.angle = a.angle});
	}
}
function update() if (lerping) FlxG.camera.angle = FlxMath.lerp(FlxG.camera.angle, angleTarget, camGameZoomLerp);
________PACKSEP________{
	"params": [
		{
			"name": "Angle Target",
			"type": "Float(-360,360,0.01,2)",
			"defaultValue": "0"
		},
		{
			"name": "Tween Time (Steps)",
			"type": "Float(0.0625,256,0.01,2)",
			"defaultValue": 1.00
		},
		{
			"name": "Tween Ease (ex: circ, quad, cube)",
			"type": "DropDown('none (happens instantly)','lerp','linear', 'back', 'bounce', 'circ', 'cube', 'elastic', 'expo', 'quad', 'quart', 'quint', 'sine', 'smoothStep', 'smootherStep')",
			"defValue": "linear"
		},
		{
			"name": "Tween Type (ex: InOut)",
			"type": "DropDown('In', 'Out', 'InOut')",
			"defValue": "In"
		}
	]
}________PACKSEP________iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAG5JREFUOI21k0sKwCAMRCfFQzj3P1y8hV30g7RqEsG3EYLOR1FwUbGGCICqqkunSeKwNlhMBTwMBUjCU21PAq/7ngQR92GCTCI7nhAAUs+9NELFSDO9g6JqJnkFot0ffhW6fOatUeoNI8i9Ln/nE9D0ItGm1WszAAAAAElFTkSuQmCC